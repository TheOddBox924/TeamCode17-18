package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.Servo;

/**
 * Created by Phoebe Taylor on 10/23/2017.
 * Program is for running a mecanum drive train with a lift, which consists of a motor and 2 180
 * servos for grabbing the blocks. The horizontal lift for the relic will consist of another motor
 * and two more 180 servos.
 * right bumper will open and close the grabbers on the vertical lift
 * 'Y' will raise the vertical lift, and 'X' will lower it
 * 'B' will extend the horizontal lift and 'A' will retract it
 * left bumper will rotate the elbow of the horizontal lift from parallel to perpendicular to the ground
 * The down button on the dpad will alternate between the relic grabber opening and closing
 */

@TeleOp(name="with_horizontal_lift", group = "mecanum")
public class HorizontalMecanumDriveClass extends LinearOpMode{

    /*Declare controller variables */
    public double x_axis;
    public double y_axis;
    public double z_axis;
    public double elbow_value = 0.5;

    //make object of the hardware class so we can use its elements
    MecanumHardware robot = new MecanumHardware();

    @Override
    public void runOpMode () {
        robot.init(hardwareMap);

        waitForStart();
        while (opModeIsActive()) {
            /* following code is for the drive train */
            //buffer for y axis of steering
            if (gamepad1.left_stick_y < -0.1 || gamepad1.left_stick_y > 0.1) {
                y_axis = -gamepad1.left_stick_y;
            } else {
                y_axis = 0;
            }
            //buffer for x axis of steering
            if (gamepad1.left_stick_x < -0.1 || gamepad1.left_stick_x > 0.1) {
                x_axis = gamepad1.left_stick_x;
            } else {
                x_axis = 0;
            }
            //buffer for z axis (turning)
            if (gamepad1.right_stick_x < -0.1 || gamepad1.right_stick_x > 0.1) {
                z_axis = gamepad1.right_stick_x;
            } else {
                z_axis = 0;
            }

            //logic for setting power to correct motors
            robot.frontRight.setPower(x_axis - y_axis + z_axis);
            robot.frontLeft.setPower(x_axis + y_axis + z_axis);
            robot.backRight.setPower(-x_axis - y_axis + z_axis);
            robot.backLeft.setPower(-x_axis + y_axis + z_axis);

            /**end code for drive train, below is the code for the vertical lift */
            //code for grabber, right bumper for open, right bumper for open/drop
            if (gamepad1.left_bumper) {
                robot.left_grab.setPosition(0.52);
                robot.right_grab.setPosition(0.48);
            } else if (gamepad1.right_bumper) {
                robot.left_grab.setPosition(0.1);
                robot.right_grab.setPosition(0.8);
            }

            //code for the lift motor. Y button will go up, X will go down, and if the limit switch
            //and the X button are pressed simultaneously, the motor will not move
            if (gamepad1.y) {
                robot.lift.setPower(0.3);
            }
            else if (gamepad1.x) {
                robot.lift.setPower(-0.3);
            }
            else {
                robot.lift.setPower(0);
            }

            /**end code for vertical lift, below is code for the horizontal lift */
            //while the 'b' button is pressed, arm will extend, while 'a' is pressed it will come back in
            if (gamepad1.b) {
                robot.horizontal_lift.setPower(0.3);
            }
            else if (gamepad1.a) {
                robot.horizontal_lift.setPower(-0.3);
            }
            else {
                robot.horizontal_lift.setPower(0);
            }
            //the switch will allow driver to change from having the elbow perpendicular to the ground
            //to parallel to the ground
            while (gamepad1.left_trigger > 0.1 && gamepad1.right_trigger < 0.1) {
                robot.claw.setPosition(0.13);
            }
            while (gamepad1.right_trigger > 0.1 && gamepad1.left_trigger < 0.1) {
                robot.claw.setPosition(0.57);
            }

            //the down button on the dpad will open the horizontal grabber, the up will close it
            while (gamepad1.dpad_down && elbow_value < 0.9) {
                robot.elbow_joint.setPosition(elbow_value);
                elbow_value += 0.001;
            }
            while (gamepad1.dpad_up && elbow_value > 0.1) {
                robot.elbow_joint.setPosition(elbow_value);
                elbow_value -= 0.001;
            }
            telemetry.update();
        }

    }

}
